<div class="row-fluid">
	<div class="span12">
	<% if flash[:color]== "valid" %>
		<div class="alert alert-success">
			<p><%= flash[:notice]%></p>
		</div>
	<% elsif flash[:color]== "invalid"%>
		<div class="alert alert-error">
			<p><%=flash[:notice]%></p>
		</div>
	<% else -%>	
	<%end%>
	</div>
</div>

<div class="row-fluid">
	
	<div class="span12">	
		
		<%= form_tag(:controller => 'aapp', :action => 'familyanalysis') do %>				
			<table align="center">
				<tr>
  					<th colspan="2">
  						<h2>Trio/Family analysis: Step 1/2</h2>
  						<br/>
  						<p> First step to analyze multiple related samples.</p>
  						<p> Please indicate the number of samples to analyze and if the submitted VCF file is a multisample-call file.</p>
  						<br/>
  					</th>
  				</tr>
				<tr>
		<!--			<td class="tablecol2">
						<h4>Indicate here the number of samples</h4>
						<br/>
						<%= text_field_tag :samplecount , nil, :class => "signupPanel" ,:placeholder => "Indicate the number of samples for analysis" %>
						<br/>
					</td>
					
					<td class="tablecol2">
						<h4>Is your VCF a multisample-call?</h4>
						<br/>
						<%= check_box_tag(:mergedvcf) %> <%= label_tag(:mergedvcf, "") %>
						<br/>
					</td> -->
					<td class="tablecol2">
						<h4>Select the ranked file to process</h4>
						<br/>
						<%= select_tag "selectedFile", options_for_select(@files), {:style => "min-width: 200px;"} %>
						<% hidden_field_tag "samplecount", 3 %>
						<% hidden_field_tag "mergedvcf", "1" %>						
						<br/>
					</td>
					
				</tr>
				<tr>
					<th colspan="2">
						<br/>
						<%= submit_tag "Next", :class => 'btn btn-primary btn-large' %>
					</th>			
				</tr>
			</table>	
		<% end -%>	
		
	</div>
	
	

	
	</div>

	
</div>	

<script>
function validateFiles(inputFile) {
  var maxExceededMessage = "File exceeds the maximum allowed size (100 MB)";
 
  var maxFileSize = $(inputFile).data('max-file-size');
  var sizeExceeded = false;
 
  $.each(inputFile.files, function() {
    if (this.size && maxFileSize && this.size > parseInt(maxFileSize)) {sizeExceeded=true;};
  });
  if (sizeExceeded) {
    window.alert(maxExceededMessage);
    $(inputFile).val('');
  };
 
}
</script>